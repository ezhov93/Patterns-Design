shared_ptr<A> a1( new A() );
   // тут счетчик == 1, мы создали объект
   // и у нас один сильный указатель на него

shared_ptr<A> a2 = a1;
   // тут счетчик == 2
   // мы имеем два сильных указателя на один объект

weak_ptr<A> w = a2;
   // тут счетчик снова == 2
   // мы имеем два сильных указателя на один объект
   // и один слабый

a2.reset();
   // тут счетчик == 1, один сильный указатель теперь пустой
   // но объект A жив и доступен через сильный указатель a1

   // так как на данный момент существует один сильный указатель
   // на объект (a1), то мы можем из слабого указателя получить сильный
a2 = w.lock();
   // тут счетчик == 2,
   // мы получили вполне работоспособный сильный указатель из слабого

a2.reset();
a1.reset();
   // тут счетчик == 0, нет ни одного сильного указателя
   // Объект автоматически умер при вызове a1.reset()

   // и попытка получить сильный указатель из слабого вернет пустой shared_ptr
shared_ptr<A> a0 = w.lock();

   // вот это условие будет выполнено
a0.get() == 0